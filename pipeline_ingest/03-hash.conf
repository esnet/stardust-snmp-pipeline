filter {
    if [@parser] == "snmp" {
        #Build a unique string to route to processor
        mutate {
            add_field => {
                "[@metadata][route_string]" => "%{[name]}:%{[tags][device]}:%{[tags][oidIndex]}"
            }
        }
    } else if [@parser] == "transponder" {
        mutate {
            add_field => {
                "[@metadata][route_string]" => "%{[service][address]}"
            }
        }
    } else {
        ruby {
            code => "logger.info('Received unroutable event so dropping')"
        }
        # drop event
        drop {}
    }

    #Calculate a hash that will be used to output to pipeline 
    ruby {
        code => "
            route_id = event.get('[@metadata][route_string]').hash % ENV['INGEST_PROCESSORS'].to_i
            event.set('[@metadata][route_id]', route_id)
        "
        tag_on_exception => '_rubyexception in determining processor_route_id'
    }
}