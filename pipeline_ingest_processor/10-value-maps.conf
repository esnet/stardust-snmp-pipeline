filter {
    if [@metadata][mapping_config][value_maps] {
        # Following time sanity checks on timestamp from telegraf:
        #  - Convert any ms timestamps to s
        #  - Drop any events with start or end times in the future or too far in the past
        ruby {
            code => "
                time_field = '@collect_time'
                ts = event.get(time_field).to_f

                # Convert any timestamps in ms to s
                if ts > 9999999999.0
                    ts = ts / 1000.0
                    event.set(time_field, ts)
                end

                # DROP any event with a strange start or end time
                # > 10 sec in the future or > 1 year in the past
                current_t = Time.now.to_f 
                age_ts = current_t - ts
                if age_ts < -10.0 || age_ts > 31536000.0
                    event.cancel
                end
            "
            tag_on_exception => '_rubyexception invalid timestamp'
        }
        #Make sure @collect_time is a date
        date {
            match => [ "@collect_time", "UNIX" ]
            target => "@collect_time"
        }

        #Format values based on configuration
        ruby {
            id => "ruby-bucket_builder"
            path => "/usr/lib/stardust/pipeline/ruby/bucket_builder.rb"
            script_params => {
                "source_time_field" => "@collect_time"
                "target_time_field" => "start"
                "values_field" => "[@metadata][mapping_config][value_maps]"
            }
            tag_on_exception => '_rubyexception in bucket_builder.rb'
        }

        #Drop event if values were not set
        ruby {
            code => "
                values = event.get('[values]')
                if !values || values.empty? then
                    event.cancel()
                end
            "
        }
    } else {
        # drop event
        drop {}
    }
}